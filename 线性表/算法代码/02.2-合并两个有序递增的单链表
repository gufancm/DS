// 合并两个有序递增的单链表

SingleList MergeList(SingleList L1, SingleList L2) {
	LNode* L3 = (LNode*)malloc(sizeof(LNode));
	LNode* p1 = L1->link       // p1指向第一个单链表
	LNode* p2 = L2->link;      // p2指向第二个单链表
	LNode* p3 = L3;            // 记录前驱节点
	if (p1 == NULL)
		return L2;
	if (p2 == NULL)
		return L1;
	while (p1 != NULL && p2 != NULL) {
		if (p1->element <= p2->element)
		{
			p3->link = p1;
			p1 = p1->link;
		}
		else {
			p3->link = p2;
			p2 = p2->link;
		}
		p3 = p3->link;
	}
	p3->link = p1 == NULL ? p2 : p1;
	return L3;
}
